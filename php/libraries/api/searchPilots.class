<?php
############################################################################
#	searchPilots.class
#
#	Tim Traver
#	3/12/2017
#	class to extend API class to search for pilots
#
############################################################################
#
include_library('event.class');

class searchPilots {
	public $string;
	public $api;
	
	public function __construct($api){
		$this->api = $api;
		$this->set_function_parameters();
	}
	
	public function set_function_parameters(){
		# This is where we set the parameter field list
		$this->api->function_parameters = array(
			array( "type" => "string",	"mandatory" => 0,	"name" => "string",		"description" => "Search String" ),
			array( "type" => "string",	"mandatory" => 0,	"name" => "country",	"description" => "Country (Code or name)" )
		);
		$this->api->function_output_modes = "CSV, JSON, XML";
		$this->api->function_output_parameters = array(
			array( "level" => 1,	"type" => "ARRAY",		"name" => "pilots",				"description" => "Pilot List" ),
			array( "level" => 2,	"type" => "integer",	"name" => "pilot_id",			"description" => "Pilot ID" ),
			array( "level" => 2,	"type" => "string",		"name" => "pilot_name",			"description" => "Pilot Full Name" ),
			array( "level" => 2,	"type" => "string",		"name" => "pilot_first_name",	"description" => "Pilot First Name" ),
			array( "level" => 2,	"type" => "string",		"name" => "pilot_last_name",	"description" => "Pilot Last Name" ),
			array( "level" => 2,	"type" => "string",		"name" => "country_code",		"description" => "Pilot Country Code" ),
			array( "level" => 2,	"type" => "string",		"name" => "location",			"description" => "Pilot Location String" ),
		);
		$this->api->function_output_description = 
			"Standard Output :\nOne Per line of the following\nPilot ID, Pilot Name, Pilot Location\n\n";
		$this->api->function_output_description .= "XML or JSON Object Hierarchy:
<result>
    <response_code>1</response_code>
    <error_string></error_string>
    <pilots>
        <pilot_id>1</pilot_id>
        <pilot_name>
            <![CDATA[Tim Traver]]>
        </pilot_name>
        <pilot_first_name>Tim</pilot_first_name>
        <pilot_last_name>Traver</pilot_last_name>
        <country_code>US</country_code>
        <location>
            <![CDATA[Vista CA - US]]>
        </location>
    </pilots>
</result>";
	}

	public function process_request(){
		
		# This is the method where we process the request
		$this->string = $this->api->input_variables['string'];
		$fs = $this->api->field_separator;
		
		# Get total plane records
		$stmt = db_prep( "
			SELECT count(*) as total
			FROM pilot
		" );
		$result = db_exec( $stmt, array() );
		$total_records = $result[0]['total'];		

		# If they included a country code, then lets find it so we can add it to the search
		$country_search = '';
		if(isset($this->api->input_variables['country']) && $this->api->input_variables['country'] != ''){
			$stmt = db_prep("
				SELECT *
				FROM country
				WHERE LOWER(country_code) = :country_code
					OR LOWER(country_name) = :country_name
			");
			$result = db_exec($stmt,array(
				"country_code" => $this->api->input_variables['country'],
				"country_name" => $this->api->input_variables['country']
			));
			if(isset($result[0])){
				$country_search = "AND c.country_id = ".$result[0]['country_id'];
			}
		}
		
		$string = trim(urldecode(strtolower($this->string)));
		$string = '%'.$string.'%';
		# Do search
		$stmt = db_prep("
			SELECT p.pilot_id, p.pilot_first_name, p.pilot_last_name, p.pilot_ama, p.pilot_fai, p.pilot_fai_license, p.pilot_city, s.state_code, c.country_code
			FROM pilot p
			LEFT JOIN state s ON p.state_id = s.state_id
			LEFT JOIN country c ON p.country_id = c.country_id
			WHERE ( LOWER(p.pilot_first_name) LIKE :term1
				OR LOWER(p.pilot_last_name) LIKE :term2
				OR LOWER(CONCAT(p.pilot_first_name,' ',p.pilot_last_name)) LIKE :term3 )
			$country_search
			ORDER BY p.pilot_first_name, p.pilot_last_name
		");
		$result = db_exec($stmt,array(
			"term1"	=> $string,
			"term2"	=> $string,
			"term3"	=> $string
		));
				
		foreach($result as $r){
			$pilots[] = array(
				"pilot_id" => $r['pilot_id'],
				"pilot_name" => $r['pilot_first_name'] . " " . $r['pilot_last_name'],
				"pilot_first_name" => $r['pilot_first_name'],
				"pilot_last_name" => $r['pilot_last_name'],
				"country_code" => $r['country_code'],
				"location"	=> $r['pilot_city'] . " {$r['state_code']} - {$r['country_code']}",
			);
		}
		$this->api->api_add_output_variable( "total_records", $total_records );
		$this->api->api_add_output_variable( "pilots", $pilots );
		
		$content = '';
		
		foreach($pilots as $p){
			$content .= "\"{$p['pilot_id']}\"{$fs}\"{$p['pilot_name']}\"{$fs}\"{$p['location']}\"\n";
		}
		
		return $content;

	}

}

?>