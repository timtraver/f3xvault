<?php
############################################################################
#	getLocationInfo.class
#
#	Tim Traver
#	4/5/2020
#	class to extend API class to get advanced location info
#
############################################################################
#

class getLocationInfo {
	public $location_id;
	public $api;
	
	public function __construct( $api ){
		$this->api = $api;
		$this->set_function_parameters();
	}
	
	public function set_function_parameters(){
		# This is where we set the mandatory fields
		$this->api->function_parameters = array(
			array("name" => "location_id", "type" => "int", "description" => "Location ID", "mandatory" => 1)
		);
		$this->api->function_output_modes = "JSON, XML";
		$this->api->function_output_description = "XML or JSON Object Hierarchy:
<result>
  <response_code>1</response_code>
  <error_string></error_string>
  <location>
      <location_id>2004</location_id>
      <location_name>
          <![CDATA[White Point]]>
      </location_name>
      <location_city>
          <![CDATA[San Pedro]]>
      </location_city>
      <state_code>CA</state_code>
      <country_code>US</country_code>
      <location_coordinates>
          <![CDATA[33.715107,-118.31704]]>
      </location_coordinates>
      <location_club>SCSR</location_club>
      <location_club_url></location_club_url>
      <location_description>
          <![CDATA[Beautiful coastal cliff side slope site in SoCal]]>
      </location_description>
      <location_directions></location_directions>
      
        <disciplines>
            <discipline_description>
                <![CDATA[F3F - Slope Racing]]>
            </discipline_description>
        </disciplines>
        
        <location_events>
            <event_id>1824</event_id>
            <event_name>
                <![CDATA[SCSR - White Point]]>
            </event_name>
            <event_start_date>
                <![CDATA[2020-03-01]]>
            </event_start_date>
            <event_type_name>
                <![CDATA[F3F Slope Race (Plus Scoring)]]>
            </event_type_name>
            <event_type_code>f3f_plus</event_type_code>
            <total_pilots>11</total_pilots>
        </location_events>
        
        <location_media>
			<location_media_id>INT</location_media_id>	
			<location_media_type>picture/video</location_media_type>
			<location_media_url>STRING</location_media_url>
			<user_id>INT</user_id>	
			<pilot_first_name>STRING</pilot_first_name>
			<pilot_last_name>STRING</pilot_last_name>	
			<pilot_country>STRING</pilot_country>	
        </location_media>
        
</result>";
	}

	public function process_request(){
		global $smarty;
				
		# This is the method where we process the request
		$this->location_id = $this->api->input_variables['location_id'];
		
		$location = array();
		$stmt = db_prep("
			SELECT *
			FROM location l
			LEFT JOIN country c ON l.country_id = c.country_id
			LEFT JOIN state s ON l.state_id = s.state_id
			WHERE l.location_id = :location_id
		");
		$result = db_exec( $stmt, array( "location_id" => $this->location_id ) );
		if($result){
			$location = array(
				"location_id" => $result[0]['location_id'],
				"location_name" => $result[0]['location_name'],
				"location_city" => $result[0]['location_city'],
				"state_code" => $result[0]['state_code'],
				"country_code" => $result[0]['country_code'],		
				"location_coordinates" => $result[0]['location_coordinates'],		
				"location_club" => $result[0]['location_club'],		
				"location_club_url" => $result[0]['location_club_url'],		
				"location_description" => $result[0]['location_description'],		
				"location_directions" => $result[0]['location_directions'],		
			);
		}
		$result = db_exec( $stmt, array( "location_id" => $this->location_id ) );
		
		# Get the location events
		$location_events = array();
		$stmt = db_prep("
			SELECT *,count(event_pilot_id) as total_pilots
			FROM event e
			LEFT JOIN event_type et ON e.event_type_id = et.event_type_id
			LEFT JOIN event_pilot ep ON e.event_id = ep.event_id
			WHERE e.location_id = :location_id
				AND ep.event_pilot_status = 1
				AND e.event_status = 1
			GROUP by e.event_id
			ORDER BY e.event_start_date DESC
		");
		$events = db_exec( $stmt, array( "location_id" => $this->location_id ) );
		foreach( $events as $event ){
			$location_events[] = array(
				"event_id"			=> $event['event_id'],
				"event_name"		=> $event['event_name'],
				"event_start_date"	=> date( "Y-m-d", strtotime( $event['event_start_date'] ) ),
				"event_type_name"	=> $event['event_type_name'],
				"event_type_code"	=> $event['event_type_code'],
				"total_pilots"	=> $event['total_pilots'],
			);
		}
		
		# Lets get the disciplines that this location has
		$disciplines = array();
		$stmt = db_prep("
			SELECT *
			FROM location_discipline ld
			LEFT JOIN discipline d ON ld.discipline_id = d.discipline_id
			WHERE ld.location_id = :location_id
				AND ld.location_discipline_status = 1
			ORDER BY d.discipline_order
		");
		$result = db_exec( $stmt, array( "location_id" => $this->location_id ) );
		foreach( $result as $row ){
			$disciplines[] = array(
				"discipline_description" => $row['discipline_description']
			);
		}
		
		# Get location media records
		$location_media = array();
		$stmt = db_prep("
			SELECT *
			FROM location_media lm
			LEFT JOIN user u ON lm.user_id = u.user_id
			WHERE lm.location_id = :location_id
			AND lm.location_media_status = 1
		");
		$results = db_exec( $stmt, array( "location_id" => $this->location_id ) );
		# Step thriough the media to get the user info for it
		foreach( $results as $row ){
			$pilot_first_name = "";
			$pilot_last_name = "";
			$pilot_country = "";
			if( $row['user_id'] != 0 ){
				$stmt2 = db_prep("
					SELECT *
					FROM pilot p
					LEFT JOIN country c ON p.country_id = c.country_id
					WHERE p.user_id = :user_id
				");
				$result2 = db_exec( $stmt2, array( "user_id" => $row['user_id'] ) );
				if( $result2[0] ){
					$pilot_first_name = utf8_encode( $result2[0]['pilot_first_name'] );
					$pilot_last_name = utf8_encode( $result2[0]['pilot_last_name'] );
					$pilot_country = $result2[0]['country_code'];
				}
			}
			$location_media[] = array(
				"location_media_id" => $row['location_media_id'],	
				"location_media_type" => $row['location_media_type'],	
				"location_media_url" => $row['location_media_url'],	
				"user_id" => $row['user_id'],	
				"pilot_first_name" => $pilot_first_name,	
				"pilot_last_name" => $pilot_last_name,	
				"pilot_country" => $pilot_country,	
			);
		}
		
		$location['disciplines'] = $disciplines;
		$location['location_events'] = $location_events;
		$location['location_media'] = $location_media;
		
		$this->api->api_add_output_variable( "location", $location );

		return $content;

	}

}

?>