<?php
############################################################################
#	searchEvents.class
#
#	Tim Traver
#	3/15/2017
#	class to extend API class to search for events
#
############################################################################
#
include_library('event.class');

class searchEvents {
	public $string;
	public $api;
	
	public function __construct($api){
		$this->api = $api;
		$this->set_function_parameters();
	}
	
	public function set_function_parameters(){
		# This is where we set the parameter field list
		$this->api->function_parameters = array(
			array( "type" => "string",	"mandatory" => 0,	"name" => "string",				"description" => "Search String" ),
			array( "type" => "string",	"mandatory" => 0,	"name" => "event_type_code",	"description" => "Event Type Code (f3f,f3b,f3j,f3k, etc)" ),
			array( "type" => "boolean",	"mandatory" => 0,	"name" => "show_future",		"description" => "Show future events (0,1)" ),
			array( "type" => "integer",	"mandatory" => 0,	"name" => "per_page",			"description" => "Results per page (Number)" ),
			array( "type" => "integer",	"mandatory" => 0,	"name" => "page",				"description" => "Page of results (Number)" ),
			array( "type" => "string",	"mandatory" => 0,	"name" => "date_from",			"description" => "Date Range From (2017-01-01)" ),
			array( "type" => "string",	"mandatory" => 0,	"name" => "date_to",			"description" => "Date Range To (2017-01-01)" ),
			array( "type" => "string",	"mandatory" => 0,	"name" => "country",			"description" => "Country (Code or name)" )
		);
		$this->api->function_output_modes = "CSV, JSON, XML";
		$this->api->function_output_parameters = array(
			array( "level" => 1,	"type" => "integer",	"name" => "total_records",		"description" => "Total Event Records" ),
			array( "level" => 1,	"type" => "ARRAY",		"name" => "events",				"description" => "Event List" ),
			array( "level" => 2,	"type" => "integer",	"name" => "event_id",			"description" => "Event ID" ),
			array( "level" => 2,	"type" => "string",		"name" => "event_name",			"description" => "Event Name" ),
			array( "level" => 2,	"type" => "string",		"name" => "location_name",		"description" => "Event Location Name" ),
			array( "level" => 2,	"type" => "string",		"name" => "country_code",		"description" => "Event Country Code" ),
			array( "level" => 2,	"type" => "string",		"name" => "event_type_name",	"description" => "Event Type Name" ),
			array( "level" => 2,	"type" => "string",		"name" => "event_type_code",	"description" => "Event Type Code" ),
		);
		$this->api->function_output_description = 
			"Standard Output :\nOne Per line of the following\nEvent ID, Event Start Date, Event Name, Location Name, Event Type\n\n";
		$this->api->function_output_description .= "XML or JSON Object Hierarchy:
<result>
  <response_code>1</response_code>
  <error_string></error_string>
  <total_records>1356</total_records>
  <events>
    <event_id>1460</event_id>
    <event_name><![CDATA[2020 TPG Clinic/Contest Series - July]]></event_name>
    <event_start_date><![CDATA[2020-07-18]]></event_start_date>
    <location_name><![CDATA[Poway Glider Field]]></location_name>
    <country_code>US</country_code>
    <event_type_name><![CDATA[F3K Hand Launch]]></event_type_name>
    <event_type_code>f3k</event_type_code>
  </events>
  <events>
  	...
  </events>
</result>
\n";
	}

	public function process_request(){
		
		# This is the method where we process the request
		$this->string = $this->api->input_variables['string'];

		$event_type_code = $this->api->input_variables['event_type_code'];
		if($event_type_code != ''){
			$event_type_string = "AND et.event_type_code LIKE '$event_type_code" . '%' . "'";
		}else{
			$event_type_string = '';
		}
		if(isset($this->api->input_variables['show_future']) && $this->api->input_variables['show_future'] != ''){
			$show_future = $this->api->input_variables['show_future'];
		}else{
			$show_future = 1;
		}
		$search_future = '';
		if($show_future == 0){
			$search_future = "AND e.event_start_date <= NOW()";
		}
		if(isset($this->api->input_variables['per_page']) && $this->api->input_variables['per_page'] != 0){
			$per_page = $this->api->input_variables['per_page'];
		}else{
			$per_page = 50;
		}
		if(isset($this->api->input_variables['page']) && $this->api->input_variables['page'] != 0){
			$page = $this->api->input_variables['page'];
		}else{
			$page = 1;
		}
		if(isset($this->api->input_variables['date_from']) && $this->api->input_variables['date_from'] != ''){
			$date_from = $this->api->input_variables['date_from'];
		}else{
			$date_from = '0000-00-00';
		}
		if(isset($this->api->input_variables['date_to']) && $this->api->input_variables['date_to'] != ''){
			$date_to = $this->api->input_variables['date_to'];
		}else{
			$date_to = '0000-00-00';
		}
		$date_range = '';
		if($date_from != '0000-00-00'){
			$date_range .= "AND e.event_start_date > '$date_from'";
		}
		if($date_to != '0000-00-00'){
			$date_range .= "AND e.event_start_date < '$date_to'";
		}
		$fs = $this->api->field_separator;

		# Lets calculate the limit from the page value
		$show_page = $page - 1;
		$page_start = $show_page * $per_page;

		# If they included a country code, then lets find it so we can add it to the search
		$country_search = '';
		if(isset($this->api->input_variables['country']) && $this->api->input_variables['country'] != ''){
			$stmt = db_prep("
				SELECT *
				FROM country
				WHERE LOWER(country_code) = :country_code
					OR LOWER(country_name) = :country_name
			");
			$result = db_exec($stmt,array(
				"country_code" => $this->api->input_variables['country'],
				"country_name" => $this->api->input_variables['country']
			));
			if(isset($result[0])){
				$country_search = "AND c.country_id = ".$result[0]['country_id'];
			}
		}
		
		# Get total event records
		$stmt = db_prep( "
			SELECT count(*) as total
			FROM event
			WHERE event_status = 1
		" );
		$result = db_exec( $stmt, array() );
		$total_records = $result[0]['total'];		
		
		if($this->string){
			
			$this->string = trim(urldecode(strtolower($this->string)));
			$this->string = '%'.$this->string.'%';

			# Do search
			$stmt = db_prep("
				SELECT *
				FROM event e
				LEFT JOIN event_type et ON e.event_type_id=et.event_type_id
				LEFT JOIN location l ON e.location_id=l.location_id
				LEFT JOIN state s ON l.state_id = s.state_id
				LEFT JOIN country c ON l.country_id = c.country_id
				WHERE (LOWER(e.event_name) LIKE :term1
					OR LOWER(c.country_name) LIKE :term2
					OR LOWER(l.location_name) LIKE :term3)
					$search_future
					$event_type_string
					$date_range
					$country_search
					AND e.event_status=1
				ORDER BY e.event_start_date DESC
				LIMIT $page_start,$per_page
			");
			$result = db_exec($stmt,array(
				"term1"	=> $this->string,
				"term2"	=> $this->string,
				"term3"	=> $this->string,
			));
		}else{
			# Give the entire result set
			$stmt = db_prep("
				SELECT *
				FROM event e
				LEFT JOIN event_type et ON e.event_type_id=et.event_type_id
				LEFT JOIN location l ON e.location_id=l.location_id
				LEFT JOIN state s ON l.state_id = s.state_id
				LEFT JOIN country c ON l.country_id = c.country_id
				WHERE 1
					$search_future
					$event_type_string
					$date_range
					$country_search
					AND e.event_status=1
				ORDER BY event_start_date DESC
				LIMIT $page_start,$per_page
			");
			$result = db_exec($stmt,array());
		}
		
		foreach($result as $r){
			$events[] = array(
				"event_id"			=> $r['event_id'],
				"event_name"		=> $r['event_name'],
				"event_start_date"	=> date("Y-m-d",strtotime($r['event_start_date'])),
				"location_name"		=> $r['location_name'],
				"country_code"		=> $r['country_code'],
				"event_type_name"	=> $r['event_type_name'],
				"event_type_code"	=> $r['event_type_code'],
			);
		}
		
		$this->api->api_add_output_variable( "total_records", $total_records );
		$this->api->api_add_output_variable( "events", $events );
		
		$content = '';
		foreach($events as $e){
			$content .= "\"{$e['event_id']}\"{$fs}\"{$e['event_start_date']}\"{$fs}\"{$e['event_name']}\"{$fs}\"{$e['location_name']}\"{$fs}\"{$e['event_type_name']}\"\n";
		}
		
		return $content;

	}

}

?>