<?php
############################################################################
#       pdf_f3k.class
#
#       Tim Traver
#       1/10/15
#       This is a class to print the pdf pilot recording sheets
#
############################################################################
include_library('fpdf/fpdf.php');

class PDF_F3X {
	# Global class to handle printing of f3k pilot sheet
	public $pdf;
	public $page_margin;
	public $page_cols;
	public $page_rows;
	public $padding;
	public $cell_width;
	public $cell_height;
	public $num_pages;
	public $per_page;
	public $event_type;
	public $orientation;
	public $data = array();
	
	public function __construct( $orientation = 'L' ){
		# Initialization of the class
		$this->page_margin = 8;
		$this->page_cols = 3;
		$this->page_rows = 2;
		$this->padding = 1;
		$this->per_page = $this->page_cols*$this->page_rows;
		$this->orientation = $orientation;
		
		$this->pdf = new FPDF($this->orientation,'mm','Letter');
		$width = $this->pdf->GetPageWidth();
		$height = $this->pdf->GetPageHeight();
		unset($this->pdf);

		$this->cell_width = ($width - ($this->page_cols+1)*$this->page_margin)/$this->page_cols;
		$this->cell_height = ($height - ($this->page_rows+1)*$this->page_margin)/$this->page_rows;
	}
	public function render($event_type,$data){
		# Main routine to render the pages with the data given
		
		$num_cells = count($data);
		$num_pages = ceil($num_cells/$this->per_page);
		
		# OK, lets create the pages
		$this->pdf = new FPDF($this->orientation,'mm','Letter');
		$this->pdf->AddPage();
		$this->pdf->SetFont('Arial','B',16);
		$this->pdf->SetMargins($this->page_margin,$this->page_margin);
		$this->pdf->SetAutoPageBreak(FALSE);
		$this->pdf->SetTitle($data[0]['event_name']." Pilot Recording Sheets");
		
		# let us set the columns
		if( $event_type == 'gps' ){
			$this->page_cols = 2;
			$this->per_page = $this->page_cols * $this->page_rows;
			$width = $this->pdf->GetPageWidth();
			$height = $this->pdf->GetPageHeight();
			$this->cell_width = ($width - ($this->page_cols+1)*$this->page_margin)/$this->page_cols;
			$this->cell_height = ($height - ($this->page_rows+1)*$this->page_margin)/$this->page_rows;
		}
		
		$x = $this->page_margin;
		$y = $this->page_margin;
		$cell = 1;
		foreach($data as $cell_num=>$d){
			switch($event_type){
				case 'f3k':
					$this->render_cell_f3k($x,$y,$d);
					break;
				case 'f3j':
					$this->render_cell_f3j($x,$y,$d);
					break;
				case 'f5j':
					$this->render_cell_f5j($x,$y,$d);
					break;
				case 'f3b':
					$this->render_cell_f3b($x,$y,$d);
					break;
				case 'td':
					$this->render_cell_td($x,$y,$d);
					break;
				case 'gps':
					$this->render_cell_gps($x,$y,$d);
					break;
			}
			if($cell % $this->page_cols ==0){
				# We need to go to the next line
				$x = $this->page_margin;
				$y = $this->cell_height + $this->page_margin*$this->page_rows;
			}else{
				$x += $this->cell_width + $this->page_margin;
			}
			if($cell % $this->per_page == 0){
				# We need to make a new page and have the x and y reset
				$this->pdf->AddPage();
				$x = $this->page_margin;
				$y = $this->page_margin;
			}
			$cell++;
		}
		return $this->pdf->Output('I',$data[0]['event_name']." Pilot Recording Sheets");
	}
	public function render_cell_f3k($x,$y,$data){
		# Function to render a single cell of data at x and y location for F3K
		# Lets set the XY for the cell
		$current_x = $x;
		$current_y = $y;
		$this->pdf->SetXY($x,$y);
		
		# Outline of the cell
		$this->pdf->Cell($this->cell_width,$this->cell_height,'',1,0,'C',FALSE);
		
		# Event Name header
		$current_x += $this->padding;
		$current_y += $this->padding;
		$inner_cell_width = $this->cell_width - (2*$this->padding);
		$this->pdf->SetFontSize(8);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($inner_cell_width,7,$data['event_name'],0,0,'L',TRUE);
		$current_y += 8;
		
		# Round Header
		$this->pdf->SetXY($x + $this->padding,$current_y);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetFontSize(20);
		$this->pdf->Cell($inner_cell_width,13,"Round {$data['round']}",0,0,'C',TRUE);
		$current_y += 14;
		
		# Pilot Name and Group
		$this->pdf->SetFontSize(10);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell(10,8,'Pilot',0,0,'C',TRUE);
		$current_x += 11;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$name_width = $inner_cell_width - 11 - 11 - 12;
		$this->pdf->Cell($name_width,8,$data['pilot'],1,0,'L',TRUE);
		$this->pdf->SetFillColor(211,211,211);
		
		$current_x = $x + $this->padding + $inner_cell_width - 11 - 11;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell(12,8,'Group',0,0,'C',TRUE);
		
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetFontSize(18);
		$this->pdf->Cell(9,8,$data['group'],1,0,'C',TRUE);
		
		$current_x = $x + $this->padding;
		$current_y += 9;
		
		# Task Description
		$this->pdf->SetFontSize(8);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($inner_cell_width,12,$data['task'],0,0,'C',TRUE);
		
		$current_x = $x + $this->padding;
		$current_y += 13;
		
		# Lets add a space
		$current_y += 3;
		
		# Lets figure out how many boxes to have for flights
		$num_flights = count($data['flights']);
		$max_width = 20;
		
		if((($num_flights*$max_width) + ($num_flights*$this->padding)) > $inner_cell_width){
			# The flight cell widths will be limited by the inner_cell_width
			$flight_cell_width = ($inner_cell_width - ($num_flights*$this->padding)) / $num_flights;
		}else{
			$flight_cell_width = 20;
		}
		$all_flight_width = ($num_flights * $flight_cell_width) + ($num_flights * $this->padding);
		$all_flight_this->padding = ($inner_cell_width - $all_flight_width)/2;
		$start_flight_x = $x + $this->padding + $all_flight_this->padding;
		
		# Flight Labels
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetFontSize(8);
		$current_x = $start_flight_x;
		
		foreach($data['flights'] as $f){
			$this->pdf->SetXY($current_x,$current_y);
			$this->pdf->Cell($flight_cell_width,10,$f['label'],0,0,'C',TRUE);
			$current_x = $this->pdf->GetX() + 1;
		}
		
		# Flight Boxes
		$current_y += 11;
		$current_x = $start_flight_x;
		$this->pdf->SetFontSize(10);
		foreach($data['flights'] as $f){
			$this->pdf->SetXY($current_x,$current_y);
			$content = "";
			if($f['type'] == 'check'){
				$content = "[  ]";
			}
			$this->pdf->Cell($flight_cell_width,11,$content,1,0,'C',TRUE);
			$current_x = $this->pdf->GetX() + 1;
		}
		
		$current_y += 12;
		
		# Lets add a space
		$current_y += 3;
		
		# Lets make quarter cells
		$cell_width = ($inner_cell_width - (4*$this->padding)) / 4;
		
		# Penalty Line
		$current_x = $x + $this->padding;
		$this->pdf->SetFontSize(10);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'Penalty',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'',1,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		
		# Signatures
		$current_y += 11;
		$current_x = $x + $this->padding;
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'Pilot Sig',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'',1,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'Timer Sig',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'',1,0,'C',TRUE);
		
		return;
	}
	public function render_cell_f3j($x,$y,$data){
		# Function to render a single cell of data at x and y location for F3J
		# Lets set the XY for the cell
		$current_x = $x;
		$current_y = $y;
		$this->pdf->SetXY($x,$y);
		
		# Outline of the cell
		$this->pdf->Cell($this->cell_width,$this->cell_height,'',1,0,'C',FALSE);
		
		# Event Name header
		$current_x += $this->padding;
		$current_y += $this->padding;
		$inner_cell_width = $this->cell_width - (2*$this->padding);
		$this->pdf->SetFontSize(8);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($inner_cell_width,7,$data['event_name'],0,0,'L',TRUE);
		$current_y += 8;
		
		# Round Header
		$this->pdf->SetXY($x + $this->padding,$current_y);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetFontSize(20);
		$this->pdf->Cell($inner_cell_width,13,"Round {$data['round']}",0,0,'C',TRUE);
		$current_y += 14;
		
		# Pilot Name and Group
		$this->pdf->SetFontSize(10);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->Cell(10,8,'Pilot',0,0,'C',TRUE);
		$current_x += 11;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$name_width = $inner_cell_width - 11 - 11 - 12;
		$this->pdf->Cell($name_width,8,$data['pilot'],1,0,'L',TRUE);
		$this->pdf->SetFillColor(211,211,211);
		
		$current_x = $x + $this->padding + $inner_cell_width - 11 - 11;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell(12,8,'Group',0,0,'C',TRUE);
		
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetFontSize(18);
		$this->pdf->Cell(9,8,$data['group'],1,0,'C',TRUE);
		
		$current_x = $x + $this->padding;
		$current_y += 9;
		
		# Print the Target Time and Lane line
		$this->pdf->SetFontSize(10);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->Cell(35,8,'Target Flight Time',0,0,'C',TRUE);
		$current_x += 36;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$name_width = $inner_cell_width - 36 - 11 - 12;
		$this->pdf->Cell($name_width,8,$data['target_time'],1,0,'L',TRUE);
		$this->pdf->SetFillColor(211,211,211);
		
		$current_x = $x + $this->padding + $inner_cell_width - 11 - 11;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell(12,8,'Lane',0,0,'C',TRUE);
		
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetFontSize(18);
		$this->pdf->Cell(9,8,$data['lane'],1,0,'C',TRUE);
		
		$current_x = $x + $this->padding;
		$current_y += 9;
		
		
		# Task Description
		$this->pdf->SetFontSize(10);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($inner_cell_width,12,$data['task'],0,0,'C',TRUE);
		
		$current_x = $x + $this->padding;
		$current_y += 13;
		
		# Flight Time lines
		$current_x += 26;
		$this->pdf->SetFontSize(8);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->Cell(10,4,'Min',0,0,'C',TRUE);
		$current_x += 14;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell(30,4,'Sec',0,0,'C',TRUE);
		$current_x += 31;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell(9,4,'Over',0,0,'C',TRUE);


		$current_y += 5;
		$current_x = $x + $this->padding;
		$this->pdf->SetFontSize(10);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->Cell(25,10,'Flight Time',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->Cell(10,10,'',1,0,'L',TRUE);
		$this->pdf->SetFillColor(211,211,211);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetFontSize(14);
		$this->pdf->Cell(2,10,':',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell(30,10,'',1,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFontSize(8);
		$this->pdf->Cell(9,10,'[ ]',1,0,'C',TRUE);

		# Lets do the landing and penalty line		
		$current_x = $x + $this->padding;
		$current_y += 11;

		# Lets add a space
		$current_y += 3;
		
		# Lets make quarter cells
		$cell_width = ($inner_cell_width - (4*$this->padding)) / 4;
		
		$this->pdf->SetFontSize(10);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'Landing',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'',1,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'Penalty',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'',1,0,'C',TRUE);
		
				
		# Signatures
		$current_y += 11;
		$current_x = $x + $this->padding;
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'Pilot Sig',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'',1,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'Timer Sig',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'',1,0,'C',TRUE);
		
		return;
	}
	public function render_cell_f5j($x,$y,$data){
		# Function to render a single cell of data at x and y location for F3J
		# Lets set the XY for the cell
		$current_x = $x;
		$current_y = $y;
		$this->pdf->SetXY($x,$y);
		
		# Outline of the cell
		$this->pdf->Cell($this->cell_width,$this->cell_height,'',1,0,'C',FALSE);
		
		# Event Name header
		$current_x += $this->padding;
		$current_y += $this->padding;
		$inner_cell_width = $this->cell_width - (2*$this->padding);
		$this->pdf->SetFontSize(8);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($inner_cell_width,7,$data['event_name'],0,0,'L',TRUE);
		$current_y += 8;
		
		# Round Header
		$this->pdf->SetXY($x + $this->padding,$current_y);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetFontSize(20);
		$this->pdf->Cell($inner_cell_width,13,"Round {$data['round']}",0,0,'C',TRUE);
		$current_y += 14;
		
		# Pilot Name and Group
		$this->pdf->SetFontSize(10);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->Cell(10,8,'Pilot',0,0,'C',TRUE);
		$current_x += 11;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$name_width = $inner_cell_width - 11 - 11 - 12;
		$this->pdf->Cell($name_width,8,$data['pilot'],1,0,'L',TRUE);
		$this->pdf->SetFillColor(211,211,211);
		
		$current_x = $x + $this->padding + $inner_cell_width - 11 - 11;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell(12,8,'Group',0,0,'C',TRUE);
		
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetFontSize(18);
		$this->pdf->Cell(9,8,$data['group'],1,0,'C',TRUE);
		
		$current_x = $x + $this->padding;
		$current_y += 9;
		
		# Print the Target Time and Lane line
		$this->pdf->SetFontSize(10);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->Cell(35,8,'Target Flight Time',0,0,'C',TRUE);
		$current_x += 36;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$name_width = $inner_cell_width - 36 - 11 - 12;
		$this->pdf->Cell($name_width,8,$data['target_time'],1,0,'L',TRUE);
		$this->pdf->SetFillColor(211,211,211);
		
		$current_x = $x + $this->padding + $inner_cell_width - 11 - 11;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell(12,8,'Lane',0,0,'C',TRUE);
		
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetFontSize(18);
		$this->pdf->Cell(9,8,$data['lane'],1,0,'C',TRUE);
		
		$current_x = $x + $this->padding;
		$current_y += 9;
		
		
		# Task Description
		$this->pdf->SetFontSize(10);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($inner_cell_width,5,$data['task'],0,0,'C',TRUE);
		
		$current_x = $x + $this->padding;
		$current_y += 5;
		
		# Flight Time lines
		$current_x += 26;
		$this->pdf->SetFontSize(8);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->Cell(10,4,'Min',0,0,'C',TRUE);
		$current_x += 14;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell(30,4,'Sec',0,0,'C',TRUE);

		$current_y += 5;
		$current_x = $x + $this->padding;
		$this->pdf->SetFontSize(10);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->Cell(25,10,'Flight Time',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->Cell(10,10,'',1,0,'L',TRUE);
		$this->pdf->SetFillColor(211,211,211);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetFontSize(14);
		$this->pdf->Cell(2,10,':',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell(30,10,'',1,0,'C',TRUE);

		$current_x = $x + $this->padding;
		$current_y += 11;

		# Start Height Line
		$this->pdf->SetFontSize(10);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->Cell(25,10,'Start Height',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->Cell(25,10,'',1,0,'L',TRUE);
		$this->pdf->SetFillColor(211,211,211);
		$current_x = $this->pdf->GetX() + 5;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->Cell(10,10,'Meters',0,0,'C',TRUE);


		# Lets do the landing and penalty line		
		$current_x = $x + $this->padding;
		$current_y += 8;

		# Lets add a space
		$current_y += 3;
		
		# Lets make quarter cells
		$cell_width = ($inner_cell_width - (4*$this->padding)) / 4;
		
		$this->pdf->SetFontSize(10);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'Landing',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'',1,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'Penalty',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'',1,0,'C',TRUE);
		
				
		# Signatures
		$current_y += 11;
		$current_x = $x + $this->padding;
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'Pilot Sig',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'',1,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'Timer Sig',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'',1,0,'C',TRUE);
		
		return;
	}
	public function render_cell_f3b($x,$y,$data){
		# Function to render a single cell of data at x and y location for F3B
		# Lets set the XY for the cell
		$current_x = $x;
		$current_y = $y;
		$this->pdf->SetXY($x,$y);
		
		# Outline of the cell
		$this->pdf->Cell($this->cell_width,$this->cell_height,'',1,0,'C',FALSE);
		
		# Event Name header
		$current_x += $this->padding;
		$current_y += $this->padding;
		$inner_cell_width = $this->cell_width - (2*$this->padding);
		$this->pdf->SetFontSize(8);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($inner_cell_width,7,$data['event_name'],0,0,'L',TRUE);
		$current_y += 8;
		
		# Round Header
		$this->pdf->SetXY($x + $this->padding,$current_y);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetFontSize(20);
		$this->pdf->Cell($inner_cell_width,13,"Round {$data['round']}",0,0,'C',TRUE);
		$current_y += 14;
		
		# Pilot Name and Group
		$this->pdf->SetFontSize(10);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->Cell(10,8,'Pilot',0,0,'C',TRUE);
		$current_x += 11;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$name_width = $inner_cell_width - 11 - 11 - 12;
		$this->pdf->Cell($name_width,8,$data['pilot'],1,0,'L',TRUE);
		$this->pdf->SetFillColor(211,211,211);
		
		$current_x = $x + $this->padding + $inner_cell_width - 11 - 11;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell(12,8,'Group',0,0,'C',TRUE);
		
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetFontSize(18);
		$this->pdf->Cell(9,8,$data['group'],1,0,'C',TRUE);
		
		$current_x = $x + $this->padding;
		$current_y += 9;
		
		# Print the Target Time and Lane line
		$this->pdf->SetFontSize(10);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->Cell(35,8,'Target Flight Time',0,0,'C',TRUE);
		$current_x += 36;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$name_width = $inner_cell_width - 36 - 11 - 12;
		$this->pdf->Cell($name_width,8,$data['target_time'],1,0,'L',TRUE);
		$this->pdf->SetFillColor(211,211,211);
		
		$current_x = $x + $this->padding + $inner_cell_width - 11 - 11;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell(12,8,'Spot',0,0,'C',TRUE);
		
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetFontSize(18);
		$this->pdf->Cell(9,8,$data['spot'],1,0,'C',TRUE);
		
		$current_x = $x + $this->padding;
		$current_y += 9;
		
		# Task Description
		$this->pdf->SetFontSize(10);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($inner_cell_width,12,$data['task'],0,0,'C',TRUE);
		
		$current_x = $x + $this->padding;
		$current_y += 13;
		
		# Flight Time lines
		$current_x += 26;
		$this->pdf->SetFontSize(8);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->Cell(15,4,'Min',0,0,'C',TRUE);
		$current_x += 19;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell(30,4,'Sec',0,0,'C',TRUE);

		$current_y += 5;
		$current_x = $x + $this->padding;
		$this->pdf->SetFontSize(10);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->Cell(25,10,'Flight Time',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->Cell(15,10,'',1,0,'L',TRUE);
		$this->pdf->SetFillColor(211,211,211);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetFontSize(14);
		$this->pdf->Cell(2,10,':',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell(30,10,'',1,0,'C',TRUE);

		# Lets do the landing and penalty line		
		$current_x = $x + $this->padding;
		$current_y += 11;

		# Lets add a space
		$current_y += 3;
		
		# Lets make quarter cells
		$cell_width = ($inner_cell_width - (4*$this->padding)) / 4;
		
		$this->pdf->SetFontSize(10);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'Landing',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'',1,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'Penalty',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'',1,0,'C',TRUE);
		
		# Signatures
		$current_y += 11;
		$current_x = $x + $this->padding;
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'Pilot Sig',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'',1,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'Timer Sig',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'',1,0,'C',TRUE);
		
		return;
	}
	public function render_cell_td($x,$y,$data){
		# Function to render a single cell of data at x and y location for TD
		# Lets set the XY for the cell
		$current_x = $x;
		$current_y = $y;
		$this->pdf->SetXY($x,$y);
		
		# Outline of the cell
		$this->pdf->Cell($this->cell_width,$this->cell_height,'',1,0,'C',FALSE);
		
		# Event Name header
		$current_x += $this->padding;
		$current_y += $this->padding;
		$inner_cell_width = $this->cell_width - (2*$this->padding);
		$this->pdf->SetFontSize(8);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($inner_cell_width,7,$data['event_name'],0,0,'L',TRUE);
		$current_y += 8;
		
		# Round Header
		$this->pdf->SetXY($x + $this->padding,$current_y);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetFontSize(20);
		$this->pdf->Cell($inner_cell_width,13,"Round {$data['round']}",0,0,'C',TRUE);
		$current_y += 14;
		
		# Pilot Name and Group
		$this->pdf->SetFontSize(10);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->Cell(10,8,'Pilot',0,0,'C',TRUE);
		$current_x += 11;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$name_width = $inner_cell_width - 11 - 11 - 12;
		$this->pdf->Cell($name_width,8,$data['pilot'],1,0,'L',TRUE);
		$this->pdf->SetFillColor(211,211,211);
		
		$current_x = $x + $this->padding + $inner_cell_width - 11 - 11;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell(12,8,'Group',0,0,'C',TRUE);
		
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetFontSize(18);
		$this->pdf->Cell(9,8,$data['group'],1,0,'C',TRUE);
		
		$current_x = $x + $this->padding;
		$current_y += 9;
		
		# Print the Target Time and Lane line
		$this->pdf->SetFontSize(10);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->Cell(35,8,'Target Flight Time',0,0,'C',TRUE);
		$current_x += 36;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$name_width = $inner_cell_width - 36 - 11 - 12;
		$this->pdf->Cell($name_width,8,$data['target_time'],1,0,'L',TRUE);
		$this->pdf->SetFillColor(211,211,211);
		
		$current_x = $x + $this->padding + $inner_cell_width - 11 - 11;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell(12,8,'Spot',0,0,'C',TRUE);
		
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetFontSize(18);
		$this->pdf->Cell(9,8,$data['spot'],1,0,'C',TRUE);
		
		$current_x = $x + $this->padding;
		$current_y += 9;
		
		# Task Description
		$this->pdf->SetFontSize(10);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($inner_cell_width,12,$data['task'],0,0,'C',TRUE);
		
		$current_x = $x + $this->padding;
		$current_y += 13;
		
		# Flight Time lines
		$current_x += 26;
		$this->pdf->SetFontSize(8);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->Cell(15,4,'Min',0,0,'C',TRUE);
		$current_x += 19;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell(30,4,'Sec',0,0,'C',TRUE);

		$current_y += 5;
		$current_x = $x + $this->padding;
		$this->pdf->SetFontSize(10);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->Cell(25,10,'Flight Time',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->Cell(15,10,'',1,0,'L',TRUE);
		$this->pdf->SetFillColor(211,211,211);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetFontSize(14);
		$this->pdf->Cell(2,10,':',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell(30,10,'',1,0,'C',TRUE);

		# Lets do the landing and penalty line		
		$current_x = $x + $this->padding;
		$current_y += 11;

		# Lets add a space
		$current_y += 3;
		
		# Lets make quarter cells
		$cell_width = ($inner_cell_width - (4*$this->padding)) / 4;
		
		$this->pdf->SetFontSize(10);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'Landing',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'',1,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'Penalty',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'',1,0,'C',TRUE);
		
		# Signatures
		$current_y += 11;
		$current_x = $x + $this->padding;
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'Pilot Sig',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'',1,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'Timer Sig',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'',1,0,'C',TRUE);
		
		return;
	}
	public function render_cell_gps($x,$y,$data){
		# Function to render a single cell of data at x and y location for F3J
		# Lets set the XY for the cell
		$current_x = $x;
		$current_y = $y;
		$this->pdf->SetXY($x,$y);
		
		# Outline of the cell
		$this->pdf->Cell($this->cell_width,$this->cell_height,'',1,0,'C',FALSE);
		
		# Event Name header
		$current_x += $this->padding;
		$current_y += $this->padding;
		$inner_cell_width = $this->cell_width - (2*$this->padding);
		$this->pdf->SetFontSize(8);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($inner_cell_width,5,$data['event_name'],0,0,'L',TRUE);
		$current_y += 6;
		
		# Round Header
		$this->pdf->SetXY($x + $this->padding,$current_y);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetFontSize(18);
		$this->pdf->Cell($inner_cell_width,8,"Round {$data['round']}",0,0,'C',TRUE);
		$current_y += 9;
		
		# Pilot Name and Group
		$this->pdf->SetFontSize(10);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->Cell(10,8,'Pilot',0,0,'C',TRUE);
		$current_x += 11;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$name_width = $inner_cell_width - 11 - 11 - 12;
		$this->pdf->Cell($name_width,8,$data['pilot'],1,0,'L',TRUE);
		$this->pdf->SetFillColor(211,211,211);
		
		$current_x = $x + $this->padding + $inner_cell_width - 11 - 11;
		$this->pdf->SetXY($current_x,$current_y);
		if( $data['order'] != '' ){
			$this->pdf->Cell(12,8,'Order',0,0,'C',TRUE);
		}else{
			$this->pdf->Cell(12,8,'Group',0,0,'C',TRUE);
		}
		
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetFontSize(18);
		if( $data['order'] != '' ){
			$this->pdf->Cell(9,8,$data['order'],1,0,'C',TRUE);
		}else{
			$this->pdf->Cell(9,8,$data['group'],1,0,'C',TRUE);
		}
		
		$current_x = $x + $this->padding;
		$current_y += 9;		
		
		# Task Description
		$this->pdf->SetFontSize(10);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($inner_cell_width,8,$data['task'],0,0,'C',TRUE);
		
		$current_x = $x + $this->padding;
		$current_y += 9;
		
		# Window Date and Time
		$this->pdf->SetFontSize(10);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->Cell(42,10,'Window Date/Time',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetFontSize(14);
		$this->pdf->Cell(30,10,'      /      / ',1,0,'L',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell(20,10,'      : ',1,0,'L',TRUE);
		$this->pdf->SetFillColor(211,211,211);
		$current_x = $x + $this->padding;
		$current_y += 11;
		
		# Total Laps line
		$this->pdf->SetFontSize(10);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->Cell(42,10,'Total Laps',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		if( $data['order'] != '' ){
			$this->pdf->SetFillColor(211,211,211);
			$this->pdf->Cell(30,10,'1',1,0,'C',TRUE);
			$this->pdf->SetFillColor(255,255,255);
		}else{
			$this->pdf->Cell(30,10,'',1,0,'C',TRUE);
		}
		$this->pdf->SetFontSize(7);
		$this->pdf->Cell(20,4,"am pm",0,0,'R',TRUE);
		$this->pdf->SetFillColor(211,211,211);
		$current_x = $x + $this->padding;
		$current_y += 11;

		# Flight Time lines
		$current_x += 36;
		$this->pdf->SetFontSize(8);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->Cell(20,4,'Min',0,0,'C',TRUE);
		$current_x += 24;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell(30,4,'Sec',0,0,'C',TRUE);
		$current_x += 31;
		$current_y += 5;

		$current_x = $x + $this->padding;
		$this->pdf->SetFontSize(10);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->Cell(35,10,'Total Flight Time',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->Cell(20,10,'',1,0,'L',TRUE);
		$this->pdf->SetFillColor(211,211,211);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetFontSize(14);
		$this->pdf->Cell(2,10,':',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell(30,10,'',1,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$current_y += 11;

		# Average Speed
		$current_x = $x + $this->padding;
		$this->pdf->SetFontSize(10);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->Cell(35,10,'Average Speed',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->Cell(54,10,'km/h',1,0,'R',TRUE);
		$this->pdf->SetFillColor(211,211,211);
		$current_x = $x + $this->padding;
		$current_y += 11;
		
		# Landing line
		$current_x = $x + $this->padding;
		$this->pdf->SetFontSize(10);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->Cell(35,10,'Landing Points',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->Cell(30,10,'',1,0,'L',TRUE);
		$this->pdf->SetFillColor(211,211,211);
		$current_x = $x + $this->padding;
		$current_y += 11;
		
		# Start Penalty line
		$current_x = $x + $this->padding;
		$this->pdf->SetFontSize(10);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->Cell(35,10,'Start Penalty',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->Cell(30,10,'',1,0,'L',TRUE);
		$this->pdf->SetFillColor(211,211,211);
		$current_x = $x + $this->padding;
		$current_y += 11;
		
		# Safety Penalty line
		$current_x = $x + $this->padding;
		$this->pdf->SetFontSize(10);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->Cell(35,10,'Safety Penalty',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->Cell(30,10,'',1,0,'L',TRUE);
		$this->pdf->SetFillColor(211,211,211);
		$current_x = $x + $this->padding;
		$current_y += 11;
		
		# Lets do the Signature line		

		# Lets make quarter cells
		$cell_width = ($inner_cell_width - (4*$this->padding)) / 4;

		$current_x = $x + $this->padding;
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'Pilot Sig',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'',1,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'Timer Sig',0,0,'C',TRUE);
		$current_x = $this->pdf->GetX() + 1;
		$this->pdf->SetFillColor(255,255,255);
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->Cell($cell_width,10,'',1,0,'C',TRUE);
		
		return;
	}
	public function render_summary( $event_type, $data ){
		# Main routine to render the pages with the data given in summary form (currently only on F5J)
		$num_rounds = count( $data['flights'] );
		$this->page_margin = 5;
		$this->page_cols = 2;
		# Figure out how many rounds so we can decide to put the summaries on quarter pages or half pages
		foreach( $data['pilots'] as $p ){
			$rounds = count( $p['rounds'] );
			$event_type_code = $p['event']['event_type_code'];
			break;
		}
		if( $event_type_code == 'f3k' ){
			if( $rounds > 6 ){
				$this->page_rows = 1;
			}else{
				$this->page_rows = 2;
			}
		}else{
			if( $rounds > 10 ){
				$this->page_rows = 1;
			}else{
				$this->page_rows = 2;
			}
		}
		$this->per_page = $this->page_cols * $this->page_rows;
		
		$num_cells = count( $data['pilots'] );
		$num_pages = ceil( $num_cells / $this->per_page );

		# OK, lets create the pages
		$this->pdf = new FPDF($this->orientation,'mm','Letter');
		$this->pdf->AddPage();
		$this->pdf->SetFont( 'Arial', 'B', 16 );
		$this->pdf->SetMargins( $this->page_margin, $this->page_margin );
		$this->pdf->SetAutoPageBreak( FALSE );
		$this->pdf->SetTitle( $data[0]['event_name']." Pilot Recording Sheets" );
		
		# let us set the columns
		$width = $this->pdf->GetPageWidth();
		$height = $this->pdf->GetPageHeight();
		$this->cell_width = ( $width - ( $this->page_cols + 1 ) * $this->page_margin ) / $this->page_cols;
		$this->cell_height = ( $height - ( $this->page_rows + 1 ) * $this->page_margin ) / $this->page_rows;
		
		$x = $this->page_margin;
		$y = $this->page_margin;
		$cell = 1;
		
		foreach( $data['pilots'] as $cell_num => $d ){
			switch( $d['event']['event_type_code'] ){
				case 'f5j':
					$this->render_cell_summary_f5j( $x, $y, $d );
					break;
				case 'f3j':
				case 'td':
					$this->render_cell_summary_f3j( $x, $y, $d );
					break;
				case 'f3k':
					$this->render_cell_summary_f3k( $x, $y, $d );
					break;
			}
			if($cell % $this->page_cols == 0 ){
				# We need to go to the next line
				$x = $this->page_margin;
				$y = $this->cell_height + $this->page_margin*$this->page_rows;
			}else{
				$x += $this->cell_width + $this->page_margin;
			}
			if($cell % $this->per_page == 0){
				# We need to make a new page and have the x and y reset
				$this->pdf->AddPage();
				$x = $this->page_margin;
				$y = $this->page_margin;
			}
			$cell++;
		}		
		
		return $this->pdf->Output( 'I', $data[0]['event_name'] . " Pilot Recording Sheets" );
	}
	public function render_cell_summary_f5j( $x, $y, $data ){
		# Function to render a single cell of data at x and y location for F5J Summary
		# Lets set the XY for the cell
		$current_x = $x;
		$current_y = $y;
		$this->pdf->SetXY( $x, $y );
		
		# Outline of the cell
		$this->pdf->Cell($this->cell_width,$this->cell_height,'',1,0,'C',FALSE);
		
		# Event Name header
		$current_x += $this->padding;
		$current_y += $this->padding;
		$inner_cell_width = $this->cell_width - ( 2 * $this->padding );
		$this->pdf->SetFontSize( 10 );
		$this->pdf->SetFillColor( 211, 211, 211 );
		$this->pdf->SetXY( $current_x, $current_y );
		$this->pdf->Image( $GLOBALS['base'] . '/htdocs/img/logo.png' , $current_x, $current_y, 6, 6, 'PNG');
		$current_x += 7;
		$this->pdf->SetXY( $current_x, $current_y );
		$this->pdf->Cell( $inner_cell_width - 30, 7, 'F3XVault : ' . $data['event']['event_name'], 0, 0, 'L', TRUE );
		
		# QR Code
		# First lets build the qr code
		$url = "f3xvault.com/se.php?e=" . $data['event']['event_id'] . "&p=" . $data['event_pilot_id'];
		include_library( "phpqrcode/qrlib.php" );
		QRcode::png( $url , "/tmp/" . $data['event_pilot_id'] . '.png', QR_ECLEVEL_L, 2, 2 );
		$current_x += $inner_cell_width - 29;
		$this->pdf->SetXY( $current_x, $current_y );
		$this->pdf->Image( "/tmp/" . $data['event_pilot_id'] . '.png' , NULL, NULL, 22, 22, 'PNG');
		system("rm /tmp/{$data['event_pilot_id']}.png");
		$current_y += 12;

		# Pilot Name
		$current_x = $x + $this->padding;
		$this->pdf->SetFontSize( 14 );
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->Cell( 15,7,'Pilot',0,0,'C',TRUE);
		$current_x += 16;
		$this->pdf->SetXY( $current_x, $current_y );
		$this->pdf->SetFillColor( 255, 255, 255 );
		$name_width = $inner_cell_width - 37;
		$this->pdf->Cell( $name_width, 7, ' ' . $data['pilot_first_name'] . ' ' . $data['pilot_last_name'], 0, 0, 'L', TRUE );
		$this->pdf->SetFillColor( 211, 211, 211 );
			
		$current_y += 12;

		# Header line for rounds
		$current_x = $x + $this->padding;
		$this->pdf->SetFontSize( 8 );
		$this->pdf->SetXY( $current_x, $current_y );
		$this->pdf->SetFillColor( 211, 211, 211 );
		$this->pdf->Cell( 9, 4, "Rd", 0, 0, 'C', TRUE );
		$current_x += 9;
		$this->pdf->SetXY( $current_x, $current_y );
		$this->pdf->Cell( 9, 4, "Grp", 0, 0, 'C', TRUE );
		$current_x += 9;
		$this->pdf->SetXY( $current_x, $current_y );
		$this->pdf->Cell( 9, 4, "Lane", 0, 0, 'C', TRUE );
		$current_x += 9;
		$this->pdf->SetXY( $current_x, $current_y );
		$this->pdf->Cell( 9, 4, "Task", 0, 0, 'C', TRUE );
		$current_x += 9;
		$this->pdf->SetXY( $current_x, $current_y );
		$this->pdf->Cell( 27, 4, "Time", 0, 0, 'L', TRUE );
		$current_x += 27;
		$this->pdf->SetXY( $current_x, $current_y );
		$this->pdf->Cell( 17, 4, "Height", 0, 0, 'L', TRUE );
		$current_x += 17;
		$this->pdf->SetXY( $current_x, $current_y );
		$this->pdf->Cell( 15, 4, "Land", 0, 0, 'L', TRUE );
		$current_x += 15;
		$this->pdf->SetXY( $current_x, $current_y );
		$this->pdf->Cell( 15, 4, "Pen", 0, 0, 'L', TRUE );
		$current_x += 15;
		$this->pdf->SetXY( $current_x, $current_y );
		$this->pdf->Cell( 20, 4, "Sig", 0, 0, 'L', TRUE );
		$current_y += 4;
		
		# Now we step through the rounds and make the lines for them to fill out
		foreach( $data['rounds'] as $round_number => $r ){
			$current_x = $x + $this->padding;
			$this->pdf->SetXY( $current_x, $current_y );
			$this->pdf->SetFillColor( 255, 255, 255 );
			$this->pdf->Cell( 9, 8, $round_number, 1, 0, 'C', TRUE );
			$current_x += 9;
			$this->pdf->SetXY( $current_x, $current_y );
			$this->pdf->Cell( 9, 8, $r['event_pilot_round_flight_group'], 1, 0, 'C', TRUE );
			$current_x += 9;
			$this->pdf->SetXY( $current_x, $current_y );
			$this->pdf->Cell( 9, 8, $r['event_pilot_round_flight_lane'], 1, 0, 'C', TRUE );
			$current_x += 9;
			$this->pdf->SetXY( $current_x, $current_y );
			$this->pdf->Cell( 9, 8, $r['event_round_time_choice'] . "m", 1, 0, 'C', TRUE );
			$current_x += 9;
			$this->pdf->SetXY( $current_x, $current_y );
			$this->pdf->Cell( 27, 8, '', 1, 0, 'L', TRUE );
			$current_x += 27;
			$this->pdf->SetXY( $current_x, $current_y );
			$this->pdf->Cell( 17, 8, "", 1, 0, 'L', TRUE );
			$current_x += 17;
			$this->pdf->SetXY( $current_x, $current_y );
			$this->pdf->Cell( 15, 8, "", 1, 0, 'L', TRUE );
			$current_x += 15;
			$this->pdf->SetXY( $current_x, $current_y );
			$this->pdf->Cell( 15, 8, "", 1, 0, 'L', TRUE );
			$current_x += 15;
			$this->pdf->SetXY( $current_x, $current_y );
			$this->pdf->Cell( 20, 8, "", 1, 0, 'L', TRUE );
			$current_y += 8;
		}
		return;
	}
	public function render_cell_summary_f3k( $x, $y, $data ){
		# Function to render a single cell of data at x and y location for F5J Summary
		# Lets set the XY for the cell
		$current_x = $x;
		$current_y = $y;
		$this->pdf->SetXY( $x, $y );
		
		# Outline of the cell
		$this->pdf->Cell($this->cell_width,$this->cell_height,'',1,0,'C',FALSE);
		
		# Event Name header
		$current_x += $this->padding;
		$current_y += $this->padding;
		$inner_cell_width = $this->cell_width - ( 2 * $this->padding );
		$this->pdf->SetFontSize( 10 );
		$this->pdf->SetFillColor( 211, 211, 211 );
		$this->pdf->SetXY( $current_x, $current_y );
		$this->pdf->Image( $GLOBALS['base'] . '/htdocs/img/logo.png' , $current_x, $current_y, 6, 6, 'PNG');
		$current_x += 7;
		$this->pdf->SetXY( $current_x, $current_y );
		$this->pdf->Cell( $inner_cell_width - 30, 7, 'F3XVault : ' . $data['event']['event_name'], 0, 0, 'L', TRUE );
		
		# QR Code
		# First lets build the qr code
		$url = "f3xvault.com/se.php?e=" . $data['event']['event_id'] . "&p=" . $data['event_pilot_id'];
		include_library( "phpqrcode/qrlib.php" );
		QRcode::png( $url , "/tmp/" . $data['event_pilot_id'] . '.png', QR_ECLEVEL_L, 2, 2 );
		$current_x += $inner_cell_width - 28;
		$this->pdf->SetXY( $current_x, $current_y -0.75 );
		$this->pdf->Image( "/tmp/" . $data['event_pilot_id'] . '.png' , NULL, NULL, 20, 20, 'PNG');
		system("rm /tmp/{$data['event_pilot_id']}.png");
		$current_y += 7;
		
		# Pilot Name
		$current_x = $x + $this->padding;
		$this->pdf->SetFontSize( 14 );
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->Cell( 15,7,'Pilot',0,0,'C',TRUE);
		$current_x += 16;
		$this->pdf->SetXY( $current_x, $current_y );
		$this->pdf->SetFillColor( 255, 255, 255 );
		$name_width = $inner_cell_width - 37;
		$this->pdf->Cell( $name_width, 7, ' ' . $data['pilot_first_name'] . ' ' . $data['pilot_last_name'], 0, 0, 'L', TRUE );
		$this->pdf->SetFillColor( 211, 211, 211 );
			
		$current_y += 7;

		# Header line for rounds
		$current_x = $x + $this->padding;
		$this->pdf->SetFontSize( 8 );
		$this->pdf->SetXY( $current_x, $current_y );
		$this->pdf->SetFillColor( 211, 211, 211 );
		$this->pdf->Cell( 8, 4, "Rd", 0, 0, 'C', TRUE );
		$current_x += 8;
		$this->pdf->SetXY( $current_x, $current_y );
		$this->pdf->Cell( 8, 4, "Grp", 0, 0, 'C', TRUE );
		$current_x += 8;
		$this->pdf->SetXY( $current_x, $current_y );
		$this->pdf->Cell( 9, 4, "Task", 0, 0, 'C', TRUE );
		$current_x += 9;
		$this->pdf->SetXY( $current_x, $current_y );
		$this->pdf->Cell( 82, 4, "", 0, 0, 'C', TRUE );
		$current_x += 82;
		// $this->pdf->SetXY( $current_x, $current_y );
		// $this->pdf->Cell( 20, 4, "Pen", 0, 0, 'R', TRUE );
		$current_y += 5;
		
		# Now we step through the rounds and make the lines for them to fill out
		$round_count = 0;
		foreach( $data['rounds'] as $round_number => $r ){
			$this->pdf->SetFontSize( 9 );
			$current_x = $x + $this->padding;
			$this->pdf->SetXY( $current_x, $current_y );
			$this->pdf->SetFillColor( 255, 255, 255 );
			$this->pdf->Cell( 8, 5, $round_number, 1, 0, 'C', TRUE );
			$current_x += 8;
			$this->pdf->SetXY( $current_x, $current_y );
			$this->pdf->Cell( 8, 5, $r['event_pilot_round_flight_group'], 1, 0, 'C', TRUE );
			$current_x += 9;
			$this->pdf->SetXY( $current_x, $current_y );
			$this->pdf->SetFillColor( 211, 211, 211 );
			$this->pdf->Cell( 111, 5, $r['flight_type_name'], 0, 0, 'L', TRUE );
			$current_x += 94;
			$this->pdf->SetXY( $current_x, $current_y );
			$this->pdf->SetFillColor( 211, 211, 211 );
			$this->pdf->SetFontSize( 6 );
			$this->pdf->Cell( 19, 5, "Pen", 1, 0, 'R', TRUE );
			$current_y += 5.5;
			
			$current_x = $x + $this->padding;
			$current_x += 17;
			$this->pdf->SetFillColor( 255, 255, 255 );
			if( $r['flight_type_code'] == 'f3k_d' ){
				$width = 12;
			}else{
				$width = 18;
			}
			# Subs headers
			$this->pdf->SetFontSize( 6 );
			foreach( $r['subs'] as $s ){
				$this->pdf->SetXY( $current_x, $current_y );
				$this->pdf->Cell( $width, 2, $s['label'], 0, 0, 'C', TRUE );
				$current_x += $width;
			}
			$current_x = $x + $this->padding + 111;
			$this->pdf->SetXY( $current_x, $current_y );
			$this->pdf->Cell( 19, 7.25, 'Sig', 1, 0, 'R', TRUE );
			# Subs boxes
			$current_x = $x + $this->padding;
			$current_x += 17;
			$current_y += 2;
			foreach( $r['subs'] as $s ){
				$this->pdf->SetXY( $current_x, $current_y );
				if( $r['flight_type_code'] == 'f3k_d' ){
					$this->pdf->Cell( $width, 5, "[  ]", 1, 0, 'C', TRUE );
				}else{
					$this->pdf->Cell( $width, 5, "", 1, 0, 'C', TRUE );
				}
				$current_x += $width;
			}
			$current_y += 6;
			$round_count++;
			if( $round_count > 11 ){
				break;
			}
		}
		return;
	}
	public function render_cell_summary_f3j( $x, $y, $data ){
		# Function to render a single cell of data at x and y location for F5J Summary
		# Lets set the XY for the cell
		$current_x = $x;
		$current_y = $y;
		$this->pdf->SetXY( $x, $y );
		
		# Outline of the cell
		$this->pdf->Cell($this->cell_width,$this->cell_height,'',1,0,'C',FALSE);
		
		# Event Name header
		$current_x += $this->padding;
		$current_y += $this->padding;
		$inner_cell_width = $this->cell_width - ( 2 * $this->padding );
		$this->pdf->SetFontSize( 10 );
		$this->pdf->SetFillColor( 211, 211, 211 );
		$this->pdf->SetXY( $current_x, $current_y );
		$this->pdf->Image( $GLOBALS['base'] . '/htdocs/img/logo.png' , $current_x, $current_y, 6, 6, 'PNG');
		$current_x += 7;
		$this->pdf->SetXY( $current_x, $current_y );
		$this->pdf->Cell( $inner_cell_width - 24, 7, 'F3XVault : ' . $data['event']['event_name'], 0, 0, 'L', TRUE );
		
		# QR Code
		# First lets build the qr code
		$url = "f3xvault.com/se.php?e=" . $data['event']['event_id'] . "&p=" . $data['event_pilot_id'];
		include_library( "phpqrcode/qrlib.php" );
		QRcode::png( $url , "/tmp/" . $data['event_pilot_id'] . '.png', QR_ECLEVEL_L, 2, 2 );
		$current_x += $inner_cell_width - 22;
		$this->pdf->SetXY( $current_x, $current_y );
		$this->pdf->Image( "/tmp/" . $data['event_pilot_id'] . '.png' , NULL, NULL, 14, 14, 'PNG');
		system("rm /tmp/{$data['event_pilot_id']}.png");
		$current_y += 7;

		# Pilot Name
		$current_x = $x + $this->padding;
		$this->pdf->SetFontSize( 14 );
		$this->pdf->SetXY($current_x,$current_y);
		$this->pdf->SetFillColor(211,211,211);
		$this->pdf->Cell( 15,7,'Pilot',0,0,'C',TRUE);
		$current_x += 16;
		$this->pdf->SetXY( $current_x, $current_y );
		$this->pdf->SetFillColor( 255, 255, 255 );
		$name_width = $inner_cell_width - 37;
		$this->pdf->Cell( $name_width, 7, ' ' . $data['pilot_first_name'] . ' ' . $data['pilot_last_name'], 0, 0, 'L', TRUE );
		$this->pdf->SetFillColor( 211, 211, 211 );
			
		$current_y += 7;

		# Header line for rounds
		$current_x = $x + $this->padding;
		$this->pdf->SetFontSize( 8 );
		$this->pdf->SetXY( $current_x, $current_y );
		$this->pdf->SetFillColor( 211, 211, 211 );
		$this->pdf->Cell( 9, 4, "Rd", 0, 0, 'C', TRUE );
		$current_x += 9;
		$this->pdf->SetXY( $current_x, $current_y );
		$this->pdf->Cell( 9, 4, "Grp", 0, 0, 'C', TRUE );
		$current_x += 9;
		$this->pdf->SetXY( $current_x, $current_y );
		$this->pdf->Cell( 9, 4, "Lane", 0, 0, 'C', TRUE );
		$current_x += 9;
		$this->pdf->SetXY( $current_x, $current_y );
		$this->pdf->Cell( 9, 4, "Task", 0, 0, 'C', TRUE );
		$current_x += 9;
		$this->pdf->SetXY( $current_x, $current_y );
		$this->pdf->Cell( 27, 4, "Time", 0, 0, 'L', TRUE );
		$current_x += 27;
		$this->pdf->SetXY( $current_x, $current_y );
		$this->pdf->Cell( 15, 4, "Land", 0, 0, 'L', TRUE );
		$current_x += 15;
		$this->pdf->SetXY( $current_x, $current_y );
		$this->pdf->Cell( 15, 4, "Pen", 0, 0, 'L', TRUE );
		$current_x += 15;
		$this->pdf->SetXY( $current_x, $current_y );
		$this->pdf->Cell( 20, 4, "Sig", 0, 0, 'L', TRUE );
		$current_y += 4;
		
		# Now we step through the rounds and make the lines for them to fill out
		foreach( $data['rounds'] as $round_number => $r ){
			$current_x = $x + $this->padding;
			$this->pdf->SetXY( $current_x, $current_y );
			$this->pdf->SetFillColor( 255, 255, 255 );
			$this->pdf->Cell( 9, 8, $round_number, 1, 0, 'C', TRUE );
			$current_x += 9;
			$this->pdf->SetXY( $current_x, $current_y );
			$this->pdf->Cell( 9, 8, $r['event_pilot_round_flight_group'], 1, 0, 'C', TRUE );
			$current_x += 9;
			$this->pdf->SetXY( $current_x, $current_y );
			$this->pdf->Cell( 9, 8, $r['event_pilot_round_flight_lane'], 1, 0, 'C', TRUE );
			$current_x += 9;
			$this->pdf->SetXY( $current_x, $current_y );
			$this->pdf->Cell( 9, 8, $r['event_round_time_choice'] . "m", 1, 0, 'C', TRUE );
			$current_x += 9;
			$this->pdf->SetXY( $current_x, $current_y );
			$this->pdf->Cell( 27, 8, '', 1, 0, 'L', TRUE );
			$current_x += 27;
			$this->pdf->SetXY( $current_x, $current_y );
			$this->pdf->Cell( 15, 8, "", 1, 0, 'L', TRUE );
			$current_x += 15;
			$this->pdf->SetXY( $current_x, $current_y );
			$this->pdf->Cell( 15, 8, "", 1, 0, 'L', TRUE );
			$current_x += 15;
			$this->pdf->SetXY( $current_x, $current_y );
			$this->pdf->Cell( 20, 8, "", 1, 0, 'L', TRUE );
			$current_y += 8;
		}
		return;
	}

}
?>